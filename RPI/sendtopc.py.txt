import struct
import socket
import sys
import threading
import time
import os

from config import WIFI_LOCAL_IP , IMG_WIFI_PORT, IMG_WIFI_LOCAL_IP
from multiprocessing import Process, Value, Queue, Manager, Lock

from picamera import PiCamera

# --- constants ---
HOST = '192.168.10.135'  # deploy (local or external) address IP of remote server 
#HOST = IMG_WIFI_LOCAL_IP # testing IP
PORT = IMG_WIFI_PORT # (local or external) port of remote server

def sendImgToPC():
    
    def sender(s):
        
        f = open(f'/home/mdp28/imgRec/image1.jpg','rb')

        print('Sending...')
        
        data = f.read(16384)
        while data != bytes(''.encode()):
            s.sendall(data)
            data = f.read(16384)
        
        print("IMG sent")
    
    def sendvideo(s):
        file_path = r'C:\Users\halte\Downloads\image.h264'
        f =  open(file_path, 'rb')
        file_size = os.path.getsize(file_path)
        print(file_size)

        print ('sending video...')

        #s.send("recieved_video.h264".encode('utf-8'))
        s.send(str(file_size).encode('utf-8'))

        time.sleep(1)

        with open(file_path, 'rb') as file:
            while True:
                data = file.read(1024)
                if not data:
                    break
                s.send(data)
        
        print(f"File '{file_path}' sent successfully.")

    try:
        # --- create socket ---
        s = socket.socket()         
        s.connect((HOST, PORT))

        # --- send and wait from reply from img rec server ---
        sendvideo(s)
        while True:
            label = s.recv(1024)
            if(label != None):
                print("Reading: " + label.decode())
                s.close()   
                return label

    except Exception as e:
        print(e)
    except KeyboardInterrupt as e:
        print(e)
    except:
        print(sys.exc_info())

